version: '3.8'

services:
  # The FUND - Frontend (Next.js)
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      # Database
      - DATABASE_URL=postgresql://ferdinand_admin:${POSTGRES_PASSWORD}@postgres:5432/ferdinand_arts
      
      # Stripe Configuration
      - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      
      # App Configuration
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NODE_ENV=${NODE_ENV:-production}
      
      # Raffle Settings
      - RAFFLE_TICKET_PRICE=${RAFFLE_TICKET_PRICE:-50}
      - RAFFLE_ARTWORK_VALUE=${RAFFLE_ARTWORK_VALUE:-700}
      - RAFFLE_TARGET_AMOUNT=${RAFFLE_TARGET_AMOUNT:-269000}
      
      # Email (Optional)
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ferdinand_uploads:/app/public/uploads
    networks:
      - ferdinand-network
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=ferdinand_arts
      - POSTGRES_USER=ferdinand_admin
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ferdinand_db_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ferdinand-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ferdinand_admin -d ferdinand_arts"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro
      - ferdinand_static:/var/www/static
    depends_on:
      - frontend
    networks:
      - ferdinand-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  ferdinand_db_data:
    driver: local
  ferdinand_uploads:
    driver: local
  ferdinand_static:
    driver: local

networks:
  ferdinand-network:
    driver: bridge